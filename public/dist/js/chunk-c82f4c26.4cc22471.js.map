{"version":3,"sources":["webpack:///./src/views/framework/jobs/Index.vue?3a4c","webpack:///./src/views/framework/jobs/Index.vue","webpack:///./src/views/framework/jobs/Index.vue?cfc5"],"names":["id","_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_a_space","_component_a_button","onClick","_cache","$event","$options","runJob","_toDisplayString","$data","progress1","progress1_pid","_hoisted_4","progress2","progress2_pid","_hoisted_5","_hoisted_6","createPool","processPids","_hoisted_7","runJobByPool","progress3","progress3_pid","_hoisted_8","progress4","progress4_pid","data","mounted","this","init","methods","$ipc","removeAllListeners","ipcApiRoute","timerJobProgress","createPoolNotice","on","event","result","jobId","number","pid","pidsStr","JSON","stringify","operation","params","type","action","invoke","someJob","then","send","someJobByPool","__exports__","render"],"mappings":"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","file":"js/chunk-c82f4c26.4cc22471.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Index.vue?vue&type=style&index=0&id=0a164fce&lang=less&scoped=true\"","<template>\r\n  <div id=\"app-base-jobs\">\r\n    <div class=\"one-block-1\">\r\n      <span>\r\n        1. 任务 / 并发任务\r\n      </span>\r\n    </div>  \r\n    <div class=\"one-block-2\">\r\n      <a-space>\r\n        <a-button @click=\"runJob(1, 'create')\">执行任务1</a-button>\r\n        进度：{{ progress1 }} ， 进程pid：{{ progress1_pid }}\r\n        <a-button @click=\"runJob(1, 'close')\">关闭</a-button>\r\n      </a-space>\r\n      <p></p>\r\n      <a-space>\r\n        <a-button @click=\"runJob(2, 'create')\">执行任务2</a-button>\r\n        进度：{{ progress2 }} ， 进程pid：{{ progress2_pid }}\r\n        <a-button @click=\"runJob(2, 'close')\">关闭</a-button>\r\n      </a-space>            \r\n    </div>\r\n    <div class=\"one-block-1\">\r\n      <span>\r\n        2. 任务池 / 并发任务\r\n      </span>\r\n    </div>  \r\n    <div class=\"one-block-2\">\r\n      <a-space>\r\n        <a-button @click=\"createPool()\">创建进程池</a-button>\r\n        进程pids：{{ processPids }}\r\n      </a-space>\r\n      <p></p>      \r\n      <a-space>\r\n        <a-button @click=\"runJobByPool(3, 'run')\">执行任务3</a-button>\r\n        进度：{{ progress3 }} ， 进程pid：{{ progress3_pid }}\r\n      </a-space>\r\n      <p></p>\r\n      <a-space>\r\n        <a-button @click=\"runJobByPool(4, 'run')\">执行任务4</a-button>\r\n        进度：{{ progress4 }} ， 进程pid：{{ progress4_pid }}\r\n      </a-space>            \r\n    </div>            \r\n  </div>\r\n</template>\r\n<script>\r\nimport { ipcApiRoute } from '@/api/main'\r\nexport default {\r\n  data() {\r\n    return {\r\n      progress1: 0,\r\n      progress1_pid: 0,\r\n      progress2: 0,\r\n      progress2_pid: 0,\r\n      progress3: 0,\r\n      progress3_pid: 0,\r\n      progress4: 0,\r\n      progress4_pid: 0,\r\n      processPids: '',\r\n    }\r\n  },\r\n  mounted () {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init () {\r\n      // 避免重复监听，或者将 on 功能写到一个统一的地方，只加载一次\r\n      this.$ipc.removeAllListeners(ipcApiRoute.timerJobProgress);\r\n      this.$ipc.removeAllListeners(ipcApiRoute.createPoolNotice);\r\n\r\n      // 监听任务进度\r\n      this.$ipc.on(ipcApiRoute.timerJobProgress, (event, result) => {\r\n        switch (result.jobId) {\r\n          case 1:\r\n            this.progress1 = result.number;\r\n            this.progress1_pid = result.pid == 0 ? result.pid : this.progress1_pid;\r\n            break;\r\n          case 2:\r\n            this.progress2 = result.number;\r\n            this.progress2_pid = result.pid == 0 ? result.pid : this.progress2_pid;\r\n            break;\r\n          case 3:\r\n            this.progress3 = result.number;\r\n            this.progress3_pid = result.pid == 0 ? result.pid : this.progress3_pid;\r\n            break;\r\n          case 4:\r\n            this.progress4 = result.number;  \r\n            this.progress4_pid = result.pid == 0 ? result.pid : this.progress4_pid;          \r\n            break;\r\n        }\r\n      })\r\n\r\n      // 监听pool\r\n      this.$ipc.on(ipcApiRoute.createPoolNotice, (event, result) => {\r\n        let pidsStr = JSON.stringify(result);\r\n        this.processPids = pidsStr;\r\n      })   \r\n    },\r\n    runJob(jobId, operation) {\r\n      let params = {\r\n        id: jobId,\r\n        type: 'timer',\r\n        action: operation\r\n      }\r\n      this.$ipc.invoke(ipcApiRoute.someJob, params).then(data => {\r\n        switch (data.jobId) {\r\n          case 1:\r\n            if (data.action == 'create') {\r\n              this.progress1_pid = data.result.pid;\r\n            }\r\n            break;\r\n          case 2:\r\n            if (data.action == 'create') {\r\n              this.progress2_pid = data.result.pid;\r\n            }\r\n            break;\r\n        }\r\n      })\r\n    },\r\n    createPool() {\r\n      let params = {\r\n        number: 3,\r\n      }\r\n      this.$ipc.send(ipcApiRoute.createPool, params);\r\n    },\r\n    runJobByPool(jobId, operation) {\r\n      let params = {\r\n        id: jobId,\r\n        type: 'timer',\r\n        action: operation\r\n      }\r\n      this.$ipc.invoke(ipcApiRoute.someJobByPool, params).then(data => {\r\n        switch (data.jobId) {\r\n          case 3:\r\n            if (data.action == 'run') {\r\n              this.progress3_pid = data.result.pid;\r\n            }\r\n            break;\r\n          case 4:\r\n            if (data.action == 'run') {\r\n              this.progress4_pid = data.result.pid;\r\n            }\r\n            break;\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n#app-base-jobs {\r\n  padding: 0px 10px;\r\n  text-align: left;\r\n  width: 100%;\r\n  .one-block-1 {\r\n    font-size: 16px;\r\n    padding-top: 10px;\r\n  }\r\n  .one-block-2 {\r\n    padding-top: 10px;\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./Index.vue?vue&type=template&id=0a164fce&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=0a164fce&lang=less&scoped=true\"\n\nimport exportComponent from \"D:\\\\Work\\\\projects\\\\electron-egg-demo\\\\frontend\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0a164fce\"]])\n\nexport default __exports__"],"sourceRoot":""}